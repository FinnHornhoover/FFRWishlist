<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ MIT License
  ~
  ~ Copyright (c) 2018 FinnHornhoover
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ Copies and derivative works of the Software which contain significant portions
  ~ of the data contained within the files that are licensed under the CC-BY-NC 4.0
  ~ license (specified in LICENSE-CC-BY-NC file) must also satisfy the conditions
  ~ of the CC-BY-NC 4.0 license, specifically non-commercial use and attribution.
  ~ Therefore, such copies or derivative works may not be used for commercial
  ~ purposes, and must include acceptable attribution.
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->

<?import finnhh.ffrwishlist.model.constants.stage.StageInfo?>
<?import finnhh.ffrwishlist.resources.ResourceHolder?>
<?import finnhh.ffrwishlist.scene.component.tableview.ItemPackTable?>
<?import finnhh.ffrwishlist.scene.component.tablecolumn.*?>
<?import finnhh.ffrwishlist.scene.component.textfield.AutoCompleteItemSearchBar?>
<?import finnhh.ffrwishlist.scene.controller.MainSceneController?>
<?import javafx.geometry.Insets?>
<?import javafx.scene.control.*?>
<?import javafx.scene.image.ImageView?>
<?import javafx.scene.layout.*?>
<?import java.lang.Double?>
<VBox alignment="TOP_CENTER" spacing="10.0" xmlns="http://javafx.com/javafx/8.0.121" xmlns:fx="http://javafx.com/fxml/1" fx:controller="finnhh.ffrwishlist.scene.controller.MainSceneController">
    <prefWidth>
        <StageInfo fx:constant="MAIN_STAGE_WIDTH" />
    </prefWidth>
    <prefHeight>
        <StageInfo fx:constant="MAIN_STAGE_HEIGHT" />
    </prefHeight>
    <fx:define>
        <Double fx:id="mainButtonSize" fx:value="131.0" />
    </fx:define>
    <children>
        <BorderPane>
            <center>
                <Label id="mainStageHeader" text="FFR Wishlist" textAlignment="CENTER" textFill="#01ae3e" BorderPane.alignment="CENTER" />
            </center>
            <right>
                <Button fx:id="infoIconButton" visible="false" styleClass="iconButton" mnemonicParsing="false" onAction="#onInformationButtonClicked" BorderPane.alignment="CENTER">
                    <graphic>
                        <ImageView preserveRatio="true">
                            <fitWidth>
                                <ResourceHolder fx:constant="BUTTON_ICONS_SIZE" />
                            </fitWidth>
                            <ResourceHolder fx:constant="INFO_ICON" />
                        </ImageView>
                    </graphic>
                </Button>
            </right>
        </BorderPane>
        <HBox alignment="CENTER_LEFT" spacing="10.0">
            <AutoCompleteItemSearchBar fx:id="searchBar" onAction="#onSearchBarQueryEntered" HBox.hgrow="ALWAYS" />
            <ComboBox fx:id="profileComboBox" onAction="#onProfileChanged" prefWidth="$mainButtonSize" />
        </HBox>
        <HBox alignment="CENTER_LEFT">
            <Label fx:id="topInfoText" textFill="white">
                <MainSceneController fx:constant="TOP_TEXT_WISHLIST_TRUE" />
            </Label>
            <ButtonBar buttonMinWidth="$mainButtonSize" HBox.hgrow="ALWAYS">
                <buttons>
                    <Button mnemonicParsing="false" onAction="#onSetMenuButtonClicked" text="Sets Menu">
                        <graphic>
                            <ImageView preserveRatio="true">
                                <fitWidth>
                                    <ResourceHolder fx:constant="BUTTON_ICONS_SIZE" />
                                </fitWidth>
                                <ResourceHolder fx:constant="SET_ICON" />
                            </ImageView>
                        </graphic>
                    </Button>
                    <Button fx:id="topAddButton" mnemonicParsing="false" onAction="#onTopAddButtonClicked">
                        <text>
                            <MainSceneController fx:constant="TOP_BUTTON_TEXT_WISHLIST_TRUE" />
                        </text>
                        <graphic>
                            <ImageView fx:id="topButtonImageView" preserveRatio="true">
                                <fitHeight>
                                    <ResourceHolder fx:constant="BUTTON_ICONS_SIZE" />
                                </fitHeight>
                                <ResourceHolder fx:constant="PLUS_ICON" />
                            </ImageView>
                        </graphic>
                    </Button>
                </buttons>
            </ButtonBar>
        </HBox>
        <ItemPackTable fx:id="itemPackTable" VBox.vgrow="ALWAYS">
            <columns>
                <IconColumn />
                <NameColumn />
                <LevelColumn />
                <TypeColumn />
                <RarityColumn />
                <SetsColumn onSetSelectedFromTable="#onSetSelectedFromTable" />
                <AmountColumn fx:id="amountColumn" onItemPackAdd="#onItemPackAdd" onItemPackIncreaseAmount="#onItemPackIncreaseAmount" onItemPackDecreaseAmount="#onItemPackDecreaseAmount" />
            </columns>
        </ItemPackTable>
        <HBox alignment="CENTER" spacing="20.0">
            <VBox alignment="CENTER_LEFT" HBox.hgrow="ALWAYS">
                <Label fx:id="messageBarSearchText" textFill="#01ae3e" />
                <Label fx:id="messageBarItemCountsText" textFill="white" />
                <Label fx:id="messageBarErrorText" textFill="red" />
            </VBox>
            <ButtonBar buttonMinWidth="$mainButtonSize">
                <buttons>
                    <Button mnemonicParsing="false" onAction="#onImportExportButtonClicked" text="Import / Export" />
                    <Button mnemonicParsing="false" onAction="#onHelpButtonClicked" text="Help" />
                </buttons>
            </ButtonBar>
        </HBox>
    </children>
    <padding>
        <Insets bottom="15.0" left="20.0" right="20.0" />
    </padding>
</VBox>
